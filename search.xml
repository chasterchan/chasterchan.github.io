<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>First Blog</title>
      <link href="/2020/08/18/firstblog/"/>
      <url>/2020/08/18/firstblog/</url>
      
        <content type="html"><![CDATA[<h1 id="静态代码块"><a href="#静态代码块" class="headerlink" title="静态代码块"></a>静态代码块</h1><ul><li>1、使用 static 关键字可以定义：静态代码块</li><li>2、什么是静态代码缺，语法是什么?<pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">static</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  java 语句<span class="token punctuation">;</span>  java 语句<span class="token punctuation">;</span>  <span class="token operator">...</span><span class="token operator">...</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre></li></ul><ul><li>3、static静态代码块在什么时候执行呢?<ul><li>类加载时执行，并且只执行一次。</li><li>静态代码块有这徉的特征/特点。</li></ul></li></ul><ul><li>4、<font color="red" size="4">注意:静态代码块在类加载时执行，并且在main方法执行之前执行。</font></li><li>5、静态代码块按照自上而下的顺序执行。</li></ul><ul><li><p>6、静态代码块的作用：</p><ul><li>第一：静态代码块不是那么常用。(不是每一个类当中都要写的东西。)</li><li>第二：静态代码块这种语法机制实际上是SUN公司给我们java程序员的一个特殊的时刻/时机<br>这个时机叫做:类加载时机。</li></ul></li><li><p>具体的业务：</p><ul><li>项目经理说了:  大家注意了，所有我们编写的程序中，只要是类加载了，请记录一下<br>类加载的日志信息（在哪年哪月哪日几时几分几秒，哪个类加载到JVM）</li></ul></li></ul><h5 id="思考-这些记录日志的代码写到哪里呢"><a href="#思考-这些记录日志的代码写到哪里呢" class="headerlink" title="思考: 这些记录日志的代码写到哪里呢?"></a>思考: 这些记录日志的代码写到哪里呢?</h5><ul><li>写到静态代码当中。</li></ul><h3 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h3><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">staticTest</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 静态代码块</span>    <span class="token keyword">static</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"A"</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 一个类当中可以编写多个静态代码块</span>    <span class="token keyword">static</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"B"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 入口</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> main <span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello world!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 编写一个静态代码块</span>    <span class="token keyword">static</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"C"</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><p>你能猜出运算的结果是什么吗？</p><p>答案如下：</p><pre class=" language-javascript"><code class="language-javascript">ABCHello world<span class="token operator">!</span></code></pre><h3 id="写在最后："><a href="#写在最后：" class="headerlink" title="写在最后："></a>写在最后：</h3><p>特别感谢以下UP主的教学视频：<br>[动力节点]（<a href="https://www.bilibili.com/video/BV1P7411V7nQ?p=268&amp;t=1139%EF%BC%89">https://www.bilibili.com/video/BV1P7411V7nQ?p=268&amp;t=1139）</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>post</title>
      <link href="/2020/08/18/post/"/>
      <url>/2020/08/18/post/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/08/17/hello-world/"/>
      <url>/2020/08/17/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
